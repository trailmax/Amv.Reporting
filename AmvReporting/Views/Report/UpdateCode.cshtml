@model AmvReporting.Domain.Reports.Commands.UpdateReportCodeCommand

@{
    ViewBag.Title = "Edit Report Metadata";
}


<h2>Edit Report</h2>

@Html.ActionLink("View Report", MVC.Home.ReportAggregate(Model.AggregateId), new { @class = "btn btn-default btn-xs", style = "position: absolute; right: 15px; top: 70px;", target = "_blank" })

<!-- Nav tabs -->
<div role="tabpanel" class="tabpanel">
    <ul class="nav nav-tabs" role="tablist">
        <li>@Html.ActionLink("Meta", MVC.Report.UpdateMetadata(Model.AggregateId), new { role = "tabpanel", @class = "tab-pane" })</li>
        <li class="active"><a class="tab-pane">Code</a></li>
        <li>@Html.ActionLink("Revisions", MVC.ReportRevisions.ViewAllVersions(Model.AggregateId), new { role = "tabpanel", @class = "tab-pane" })</li>
    </ul>
</div>

<div class="row">
    @using (Html.BeginForm(MVC.Report.UpdateCode(), FormMethod.Post, new { role = "form", @class = "submit-by-ajax" }))
    {
        @Html.ValidationSummary(false)
        @Html.HiddenFor(m => m.AggregateId)

        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(m => m.Sql, new { @class = "control-label" })
                @Html.TextAreaFor(m => m.Sql, new { @class = "form-control", rows = 10 })
                @Html.ValidationMessageFor(m => m.Sql)
                <p>
                    <a id="parseRowHtml"><span class="glyphicon glyphicon-th"></span> Parse Html for SQL</a>&nbsp;&nbsp;&nbsp;
                    <a id="cleanseAndFormatSql"><span class="glyphicon glyphicon-check"></span> Cleanse and Format SQL</a>
                    <br />
                    <a id="previewData">Preview Data <span class="glyphicon glyphicon-forward"></span></a>
                </p>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.JavaScript, new { @class = "control-label" })
                <div>Report element is #report. So you'll need JS to point to this element</div>
                @Html.TextAreaFor(m => m.JavaScript, new { @class = "form-control", rows = 10 })
                @Html.ValidationMessageFor(m => m.JavaScript)
                <a id="previewFullReport">Preview Report <span class="glyphicon glyphicon-forward"></span></a>
            </div>

            <div class="panel-group" id="misc-accordion">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" data-parent="misc-accordion" href="#collapseHtml">
                                Html Override
                            </a>
                        </h4>
                    </div>
                    <div id="collapseHtml" class="panel-collapse collapse">
                        <div class="form-group panel-body">
                            <div>If this is populated, this overrides any pre-populated HTML</div>
                            @Html.TextAreaFor(m => m.HtmlOverride, new { @class = "form-control", rows = 5 })
                            @Html.ValidationMessageFor(m => m.HtmlOverride)
                        </div>
                    </div>
                </div>

                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" data-parent="misc-accordion" href="#collapseCss">
                                Css
                            </a>
                        </h4>
                    </div>
                    <div id="collapseCss" class="panel-collapse collapse">
                        <div class="form-group panel-body">
                            @Html.TextAreaFor(m => m.Css, new { @class = "form-control", rows = 7 })
                            @Html.ValidationMessageFor(m => m.Css)
                        </div>
                    </div>
                </div>
            </div>

            <input type="submit" value="Update" class="btn btn-default" />
            @Html.ActionLink("Back To List", MVC.Report.Index(), new { @class = "btn btn-default" })
        </div>
    }
    <div class="col-md-6" id="previewContainer"></div>
</div>